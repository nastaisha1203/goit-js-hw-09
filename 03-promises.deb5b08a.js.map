{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApCSQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAIC,iBACJ,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAErBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAClC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,GAAe,EAElD,YADF3B,EAAA4B,OAAOC,QAAQ,6BAGjB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EAAG,CAEvC5B,EAAc4B,EAAI,EADAP,EAAaO,EAAIJ,GAEhCK,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBJ,EAAA4B,OAAOK,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE9D+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBJ,EAAA4B,OAAOC,QAAQ,sBAAqCK,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n  if (delayValue < 0 || stepValue < 0 || amountValue <= 0) {\n    Notify.failure('❌ Enter a positive number');\n    return;\n  }\n  for (let i = 0; i < amountValue; i += 1) {\n    let amountDelay = delayValue + i * stepValue;\n    createPromise(i + 1, amountDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.deb5b08a.js.map"}