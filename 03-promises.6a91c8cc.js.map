{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,kBAClCC,EAAUF,SAASC,cAAc,iBACjCE,EAAYH,SAASC,cAAc,mBAyBzC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCGN,SAASC,cAAc,QAE/Ba,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAIC,iBACJ,MAAMC,EAAaC,OAAOnB,EAASoB,OAC7BC,EAAYF,OAAOhB,EAAQiB,OAC3BE,EAAcH,OAAOf,EAAUgB,OACrC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,GAAe,EACpDxB,EAAAyB,OAAOC,QAAQ,kCAEb,IAAG,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EAAG,CAEvCpB,EAAcoB,EAAI,EADAP,EAAaO,EAAIJ,GAEhCK,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAyB,OAAOI,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAyB,OAAOC,QAAQ,sBAAoBlB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayRef = document.querySelector('[name=\"delay\"]');\nconst stepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayValue = Number(delayRef.value);\n  const stepValue = Number(stepRef.value);\n  const amountValue = Number(amountRef.value);\n  if (delayValue < 0 || stepValue < 0 || amountValue <= 0) {\n    Notify.failure('❌ Enter a positive number');\n  } else {\n    for (let i = 0; i < amountValue; i += 1) {\n      let amountDelay = delayValue + i * stepValue;\n      createPromise(i + 1, amountDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayRef","document","querySelector","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.6a91c8cc.js.map"}